PPI2Mat <- function(ppi)

用途: 将用节点对表示的网络转变为邻接矩阵表示。

输入：
ppi: 两列的数据框，代表一个网络，每一列表示两个节点的连接。注：网络必须为连通图，可用igraph的is.connected()判断。

输出：
N*N的邻接矩阵，矩阵为‘dgCMatrix’类型，可以减少内存，提高计算效率。矩阵的行名和列名为对应的节点名。

randomwalk <- function(mat,run=1,stay=NULL)

用途：随机游走在数学上表示为矩阵相乘，run表示游走的次数，默认为1；stay表示节点下次游走留在本地的概率。

输入：
mat：稀疏的邻接矩阵。
run：随机游走的次数。
stay：游走时留在本地的概率。

输出：
矩阵，(i,j)位置的元素表示从i点出发，游走run轮到j点的概率。

注意：
1. 最好不要用该函数算多于4轮的随机游走，因为随着矩阵变得不稀疏，计算效率会变低。算mat7(7轮游走)可以用mat4%*%mat3.
2. 有研究表名，随机游走的最大次数不宜超过7轮，否则矩阵达到稳态，这时到达某个节点的概率只与节点的度正相关。

NBProfile <- function(geneSet,RWmatrix)

用途：从网络上的某些节点出发（geneSet中的节点），在网络上游走（游走规则由RWmatrix决定）后，得到网络上每个节点的一个得分向量。

输入：
geneSet：由gene id组成的向量。
RWmatrix：随机游走n轮的矩阵。

输出：
网络上每个节点的得分向量。

gsea.one<-function(L,genesets,n=1000)

用途：用来算单个基因得分向量在指定通路中的富集情况。

输入：
L：基因得分向量，例如由NPProfile()计算得出的，也可以是由其他方法得到的基因得分。
genesets: 一个基因集列表，每个基因集代表一个功能模块，参考data("pathways15")
n: GSEA算法用permutation方法获得每个通路得分的分布，n指定permutation的次数。

输出：
向量，每个通路对应的假设检验的p value。零假设为该通路没有富集得分较高的基因。pvalue小于一定阈值可以认为该通路富集了高得分的基因。

数据集：
ppi_id：蛋白质相互作用网络，整合了HPRD和BIOGRID中的PPI，只取了最大连通子集，节点由gene id表示。
pathway15：基因集列表，每个基因集代表一个功能模块，整合了GO biological function，KEGG，BIOCARTA，Reactome中的通路，只取基因个数大于15，小于200的基因集。

例子：
library(NBgsea)
library(igraph)
data("pathways15")
data("ppi_id")
mat <- PPI2Mat(ppi_id)
mat4.3 <- randomwalk(mat,run=4,stay=0.3)#
allGenes <- rownames(mat4.3)
geneset <- sample(allGenes,100)
geneP <- NBProfile(geneset,mat4.3)
result <- gsea.one(geneP,pathway15,1000)
#mat4.3也可由以下方法得到
mat1.3<-mat/rowSums(mat)*0.7
diag(mat1.3)<-0.3
mat2.3<-mat1.3%*%mat1.3
mat4.3<-mat2.3%*%mat2.3
